/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package olc1.project1;

import olc1.project1.utils.AnalyzerResult;
import olc1.project1.utils.Utils;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import olc1.project1.errors.LexicalError;
import olc1.project1.errors.SintaxError;
import olc1.project1.instructions.Statement;

/**
 *
 * @author Xhunik
 */
public class MainFrame extends javax.swing.JFrame {
    LinkedList<Statement> ast;
    LinkedList<LexicalError> lexErrors;
    LinkedList<SintaxError> sintaxErrors;
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonClean = new javax.swing.JButton();
        jButtonRun = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jButtonPython = new javax.swing.JButton();
        jButtonGolang = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuOpen = new javax.swing.JMenuItem();
        jMenuSave = new javax.swing.JMenuItem();
        jMenuReports = new javax.swing.JMenu();
        jMenuErrors = new javax.swing.JMenuItem();
        jMenuViewAST = new javax.swing.JMenuItem();
        jMenuView = new javax.swing.JMenu();
        jMenuUserManual = new javax.swing.JMenuItem();
        jMenuTechnicalManual = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("OLC1_2S_2022 201900462");

        jButtonClean.setText("Limpiar");
        jButtonClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCleanActionPerformed(evt);
            }
        });

        jButtonRun.setText("Ejecutar");
        jButtonRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunActionPerformed(evt);
            }
        });

        jTextArea.setColumns(20);
        jTextArea.setFont(new java.awt.Font("Lucida Console", 0, 15)); // NOI18N
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        jButtonPython.setText("Python");
        jButtonPython.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPythonActionPerformed(evt);
            }
        });

        jButtonGolang.setText("Golang");
        jButtonGolang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGolangActionPerformed(evt);
            }
        });

        jMenuFile.setText("Archivo");

        jMenuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuOpen.setText("Abrir...");
        jMenuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuOpen);

        jMenuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuSave.setText("Guardar como...");
        jMenuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSaveActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuSave);

        jMenuBar1.add(jMenuFile);

        jMenuReports.setText("Reportes");

        jMenuErrors.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuErrors.setText("Errores");
        jMenuErrors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuErrorsActionPerformed(evt);
            }
        });
        jMenuReports.add(jMenuErrors);

        jMenuViewAST.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuViewAST.setText("Ver AST");
        jMenuViewAST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuViewASTActionPerformed(evt);
            }
        });
        jMenuReports.add(jMenuViewAST);

        jMenuBar1.add(jMenuReports);

        jMenuView.setText("Ver");

        jMenuUserManual.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuUserManual.setText("Manual de usuario");
        jMenuUserManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuUserManualActionPerformed(evt);
            }
        });
        jMenuView.add(jMenuUserManual);

        jMenuTechnicalManual.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuTechnicalManual.setText("Manual tecnico");
        jMenuTechnicalManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuTechnicalManualActionPerformed(evt);
            }
        });
        jMenuView.add(jMenuTechnicalManual);

        jMenuBar1.add(jMenuView);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonClean, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonRun, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addComponent(jButtonPython, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jButtonGolang, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonClean)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRun)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                        .addComponent(jButtonGolang)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPython))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuErrorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuErrorsActionPerformed
        // TODO add your handling code here:
        if (lexErrors == null || sintaxErrors == null){
            JOptionPane.showMessageDialog(this, "No se a ejecutado el archivo", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        ErrorFrame frame = new ErrorFrame(lexErrors, sintaxErrors);
        frame.setVisible(true);
//        System.out.println("Errores lexicos");
//        for (LexicalError lexError : lexErrors) {
//            System.out.println("Lexema: " + lexError.lexema + ", no pertenece al lenguaje, encontrado en (fila, columna): "
//                    + lexError.row + ", " + lexError.col);
//        }
//        System.out.println("Errores sintacticos");
//        for (SintaxError sintaxError : sintaxErrors) {
//            System.out.println("Elemento: " + sintaxError.lexema + ", no esperado, encontrado en (fila, columna): " 
//                    + sintaxError.row + ", " + sintaxError.col);
//        }
    }//GEN-LAST:event_jMenuErrorsActionPerformed

    private void jButtonCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCleanActionPerformed
        // TODO add your handling code here:
        jTextArea.selectAll();
        jTextArea.replaceSelection("");
        ast = null;
        lexErrors = null;
        sintaxErrors = null;
    }//GEN-LAST:event_jButtonCleanActionPerformed

    private void jMenuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOpenActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        jfc.setCurrentDirectory(new File(System.getProperty("user.dir")));
        jfc.setFileFilter(new FileNameExtensionFilter("OLC Files", "olc"));
        int result = jfc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION){
            try {
                String canonical = jfc.getSelectedFile().getCanonicalPath();
                String content = Files.readString(Path.of(canonical));
                jTextArea.selectAll();
                jTextArea.replaceSelection("");
                jTextArea.insert(content, 0);
                this.ast = null;
                this.lexErrors = null;
                this.sintaxErrors = null;
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuOpenActionPerformed

    private void jMenuViewASTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuViewASTActionPerformed
        // TODO add your handling code here:
        if (ast == null){
            JOptionPane.showMessageDialog(this, "No se a ejecutado el archivo", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String graph = Utils.graph(ast);
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("./report.dot"))) {
                writer.write(graph);
                Runtime.getRuntime().exec("dot -Tpng report.dot -o report.png");
                Thread.sleep(1000);
                Runtime.getRuntime().exec("cmd.exe /c start report.png");
            } catch (IOException | InterruptedException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_jMenuViewASTActionPerformed

    private void jMenuUserManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuUserManualActionPerformed
        try {
            // TODO add your handling code here:
            Runtime.getRuntime().exec("cmd.exe /c start docs/Manual_de_usuario_compi1_p1.pdf");
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuUserManualActionPerformed

    private void jMenuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSaveActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        jfc.setCurrentDirectory(new File(System.getProperty("user.dir")));
        jfc.setFileFilter(new FileNameExtensionFilter("OLC Files", "olc"));
        int result = jfc.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION){
            String content = jTextArea.getText();

            try (BufferedWriter writer = new BufferedWriter(new FileWriter(jfc.getSelectedFile()))) {
                writer.write(content);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jMenuSaveActionPerformed

    private void jButtonRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunActionPerformed
        try {
            // TODO add your handling code here:
            AnalyzerResult result = Utils.loadFile(jTextArea.getText());
            this.ast = result.ast;
            this.lexErrors = result.lexErrors;
            this.sintaxErrors = result.sintaxErrors;
            
            if (!lexErrors.isEmpty() || !sintaxErrors.isEmpty()){
                JOptionPane.showMessageDialog(this, "Se han encontrado errores en la entrada", "Error", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonRunActionPerformed

    private void jButtonPythonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPythonActionPerformed
        // TODO add your handling code here:
        if (ast == null){
            JOptionPane.showMessageDialog(this, "No se ha ejecutado el archivo", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        PythonTranslateFrame frame = new PythonTranslateFrame(ast);
        frame.setVisible(true);
    }//GEN-LAST:event_jButtonPythonActionPerformed

    private void jButtonGolangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGolangActionPerformed
        // TODO add your handling code here:
        if (ast == null){
            JOptionPane.showMessageDialog(this, "No se ha ejecutado el archivo", "Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        GolangTranslateFrame frame = new GolangTranslateFrame(ast);
        frame.setVisible(true);
    }//GEN-LAST:event_jButtonGolangActionPerformed

    private void jMenuTechnicalManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuTechnicalManualActionPerformed
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            Runtime.getRuntime().exec("cmd.exe /c start docs/Manual_tecnico_compi1_p1.pdf");
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuTechnicalManualActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClean;
    private javax.swing.JButton jButtonGolang;
    private javax.swing.JButton jButtonPython;
    private javax.swing.JButton jButtonRun;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuErrors;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuOpen;
    private javax.swing.JMenu jMenuReports;
    private javax.swing.JMenuItem jMenuSave;
    private javax.swing.JMenuItem jMenuTechnicalManual;
    private javax.swing.JMenuItem jMenuUserManual;
    private javax.swing.JMenu jMenuView;
    private javax.swing.JMenuItem jMenuViewAST;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}
